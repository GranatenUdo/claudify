# ${PROJECT_NAME} API Documentation

> Auto-generated on ${TIMESTAMP} by Claudify Documentation System

## Overview

${PROJECT_DESCRIPTION}

**Base URL**: `${API_BASE_URL}`  
**Version**: ${API_VERSION}  
**Authentication**: ${AUTH_METHOD}

## Table of Contents

1. [Authentication](#authentication)
2. [Common Headers](#common-headers)
3. [Error Handling](#error-handling)
4. [Endpoints](#endpoints)
${GENERATE_ENDPOINT_TOC}
5. [Data Models](#data-models)
6. [Webhooks](#webhooks)

## Authentication

${IF_AUTH_JWT}
### JWT Bearer Token

All API requests require a valid JWT token in the Authorization header:

```http
Authorization: Bearer <your-jwt-token>
```

Tokens can be obtained from the `/auth/token` endpoint.
${END_IF}

${IF_AUTH_OAUTH}
### OAuth 2.0

This API uses OAuth 2.0 for authentication. Supported flows:
- Authorization Code
- Client Credentials

**Authorization URL**: `${OAUTH_AUTH_URL}`  
**Token URL**: `${OAUTH_TOKEN_URL}`
${END_IF}

${IF_MULTI_TENANT}
### Multi-Tenant Context

All requests must include the tenant context. The ${TENANT_FIELD} is automatically determined from your authentication token.

⚠️ **Important**: Cross-tenant requests are not permitted. Each request is scoped to your organization.
${END_IF}

## Common Headers

| Header | Required | Description |
|--------|----------|-------------|
| `Authorization` | Yes | Bearer token for authentication |
| `Content-Type` | Yes* | `application/json` for POST/PUT requests |
| `X-Request-ID` | No | Unique request identifier for tracing |
${IF_MULTI_TENANT}| `X-Tenant-ID` | No | Override tenant context (admin only) |${END_IF}

## Error Handling

${IF_RESULT_PATTERN}
All endpoints return a consistent Result<T> response format:

### Success Response
```json
{
  "isSuccess": true,
  "data": { ... },
  "message": null,
  "errors": []
}
```

### Error Response
```json
{
  "isSuccess": false,
  "data": null,
  "message": "Operation failed",
  "errors": [
    {
      "code": "VALIDATION_ERROR",
      "field": "name",
      "message": "Name is required"
    }
  ]
}
```
${ELSE}
### Error Response Format
```json
{
  "error": {
    "code": "ERROR_CODE",
    "message": "Human-readable error message",
    "details": { ... }
  }
}
```
${END_IF}

### Common Error Codes

| Code | HTTP Status | Description |
|------|-------------|-------------|
| `UNAUTHORIZED` | 401 | Invalid or missing authentication |
| `FORBIDDEN` | 403 | Insufficient permissions |
| `NOT_FOUND` | 404 | Resource not found |
| `VALIDATION_ERROR` | 400 | Request validation failed |
| `RATE_LIMITED` | 429 | Too many requests |
${IF_MULTI_TENANT}| `TENANT_MISMATCH` | 403 | Cross-tenant access attempted |${END_IF}

## Endpoints

${FOREACH_CONTROLLER}
### ${CONTROLLER_NAME}

${CONTROLLER_DESCRIPTION}

${FOREACH_ENDPOINT}
#### ${HTTP_METHOD} `${ENDPOINT_PATH}`

${ENDPOINT_DESCRIPTION}

${IF_ENDPOINT_AUTH}
**Authorization**: ${ENDPOINT_AUTH_REQUIREMENTS}
${END_IF}

**Request Parameters**:
${IF_PATH_PARAMS}
Path Parameters:
| Parameter | Type | Required | Description |
|-----------|------|----------|-------------|
${FOREACH_PATH_PARAM}| `${PARAM_NAME}` | ${PARAM_TYPE} | Yes | ${PARAM_DESCRIPTION} |
${END_FOREACH}
${END_IF}

${IF_QUERY_PARAMS}
Query Parameters:
| Parameter | Type | Required | Description | Default |
|-----------|------|----------|-------------|---------|
${FOREACH_QUERY_PARAM}| `${PARAM_NAME}` | ${PARAM_TYPE} | ${PARAM_REQUIRED} | ${PARAM_DESCRIPTION} | ${PARAM_DEFAULT} |
${END_FOREACH}
${END_IF}

${IF_REQUEST_BODY}
**Request Body**:
```json
${REQUEST_BODY_EXAMPLE}
```

Schema: [`${REQUEST_BODY_TYPE}`](#${REQUEST_BODY_TYPE_LINK})
${END_IF}

**Response**:
```json
${RESPONSE_EXAMPLE}
```

**Example Request**:
```bash
curl -X ${HTTP_METHOD} \
  '${FULL_ENDPOINT_URL}' \
  -H 'Authorization: Bearer ${YOUR_TOKEN}' \
  ${IF_REQUEST_BODY}-H 'Content-Type: application/json' \
  -d '${REQUEST_BODY_EXAMPLE}'${END_IF}
```

${IF_ENDPOINT_ERRORS}
**Possible Errors**:
- `${ERROR_CODE}`: ${ERROR_DESCRIPTION}
${END_IF}

---

${END_FOREACH}
${END_FOREACH}

## Data Models

${FOREACH_MODEL}
### ${MODEL_NAME}

${MODEL_DESCRIPTION}

```typescript
interface ${MODEL_NAME} {
${FOREACH_PROPERTY}  ${PROPERTY_NAME}${PROPERTY_OPTIONAL}: ${PROPERTY_TYPE}; // ${PROPERTY_DESCRIPTION}
${END_FOREACH}}
```

${IF_MODEL_VALIDATIONS}
**Validation Rules**:
${FOREACH_VALIDATION}- ${VALIDATION_RULE}
${END_FOREACH}
${END_IF}

${IF_MODEL_EXAMPLE}
**Example**:
```json
${MODEL_EXAMPLE}
```
${END_IF}

${END_FOREACH}

## Webhooks

${IF_WEBHOOKS}
The API supports webhooks for real-time event notifications.

### Webhook Events

| Event | Description | Payload |
|-------|-------------|---------|
${FOREACH_WEBHOOK}| `${WEBHOOK_EVENT}` | ${WEBHOOK_DESCRIPTION} | [`${WEBHOOK_PAYLOAD_TYPE}`](#${WEBHOOK_PAYLOAD_LINK}) |
${END_FOREACH}

### Webhook Security

All webhook requests include:
- `X-Webhook-Signature`: HMAC-SHA256 signature of the payload
- `X-Webhook-Timestamp`: Unix timestamp of the request

Verify webhooks using:
```${LANG_EXAMPLE}
${WEBHOOK_VERIFICATION_CODE}
```
${ELSE}
This API does not currently support webhooks.
${END_IF}

## Rate Limiting

API requests are rate-limited per ${RATE_LIMIT_WINDOW}:
- **Authenticated requests**: ${RATE_LIMIT_AUTHENTICATED} requests
- **Unauthenticated requests**: ${RATE_LIMIT_UNAUTHENTICATED} requests

Rate limit headers:
- `X-RateLimit-Limit`: Maximum requests allowed
- `X-RateLimit-Remaining`: Requests remaining
- `X-RateLimit-Reset`: Unix timestamp when limit resets

## Changelog

View the [API Changelog](./CHANGELOG.md) for version history and breaking changes.

---

*Generated by Claudify Documentation System - Intelligent documentation that adapts to your API*